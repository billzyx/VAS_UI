import openpyxl
import os

from vas_toolkit.apply_labeling import get_xlsx_contents


def load_cha_file(file_path):
    with open(file_path, 'r') as f:
        lines = f.readlines()
        return process_lines(lines[8:-1])


def load_txt_file(file_path):
    with open(file_path, 'r') as f:
        lines = f.readlines()
        return process_lines(lines)


def process_lines(lines):
    speaker_list = []
    text_list = []
    audio_list = []
    for idx, line in enumerate(lines):
        split_list = line.split('\t')
        speaker = split_list[0]
        if '' in split_list[1]:
            split_text_list = split_list[1].split('')
            text = split_text_list[0]
            audio = split_text_list[1].replace('', '')
        else:
            text = split_list[1]
            audio = None
        # print(speaker, text, audio)
        speaker_list.append(speaker)
        text_list.append(text)
        audio_list.append(audio)
    return speaker_list, text_list, audio_list


def merge_list_numbers(my_list):
    # Generated by ChatGPT!
    # input [1, 2, 3, 5, 6, 7, 9]
    # output "1-3, 5-7, 9"
    result = []
    start = my_list[0]
    end = my_list[0]

    for i in range(1, len(my_list)):
        if my_list[i] == end + 1:
            end = my_list[i]
        else:
            if start == end:
                result.append(str(start))
            else:
                result.append(f"{start}-{end}")
            start = my_list[i]
            end = my_list[i]

    if start == end:
        result.append(str(start))
    else:
        result.append(f"{start}-{end}")

    return ", ".join(result)


def save_labels(txt_file_path, label_list):
    wb = openpyxl.Workbook()
    sheet = wb.active

    # Fit vas-toolkit format
    titles = ["ID", "Useless commands", "Reverse commands", "Merge commands", "rep to PAR", "rep to vas", "add [*]"]
    for i, value in enumerate(titles):
        sheet.cell(row=1, column=i + 1).value = value

    # label_list items: ["Useless commands", "add [*]", "rep to PAR", "rep to vas",]
    sheet.cell(row=2, column=2).value = merge_list_numbers([x + 1 for x in label_list[0]])
    sheet.cell(row=2, column=7).value = merge_list_numbers([x + 1 for x in label_list[1]])
    sheet.cell(row=2, column=5).value = merge_list_numbers([x + 1 for x in label_list[2]])
    sheet.cell(row=2, column=6).value = merge_list_numbers([x + 1 for x in label_list[3]])

    sheet.cell(row=1, column=1).value = os.path.basename(os.path.dirname(txt_file_path))

    # Save the Excel file
    xls_file_path = txt_file_path.replace('.txt', '.xlsx')
    wb.save(xls_file_path)


def load_labels(txt_file_path):
    xls_file_path = txt_file_path.replace('.txt', '.xlsx')

    wb = openpyxl.load_workbook(xls_file_path)
    sheet = wb.worksheets[0]

    dir_name = os.path.basename(os.path.dirname(txt_file_path))
    row = sheet.rows[1]
    assert row[0].value == dir_name

    elm_to_remove, elm_to_reverse, elm_to_merge, elm_to_par, elm_to_vas, elm_to_add_bracket = \
        get_xlsx_contents(xls_file_path)

    label_list = [elm_to_remove[dir_name], elm_to_add_bracket[dir_name], elm_to_par[dir_name], elm_to_vas[dir_name]]

    return label_list
